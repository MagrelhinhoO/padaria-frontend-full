{"ast":null,"code":"import { signal } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AuthService } from '../../../../core/services/auth/auth.service';\nimport { TokenService } from '../../../../core/services/auth/token.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../core/services/auth/auth.service\";\nimport * as i2 from \"../../../../core/services/auth/token.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    auth;\n    tokenService;\n    router;\n    // Modo estático: credenciais fixas root / root\n    staticUser = 'root';\n    staticPass = 'root';\n    username = '';\n    password = '';\n    loading = signal(false);\n    constructor(auth, tokenService, router) {\n      this.auth = auth;\n      this.tokenService = tokenService;\n      this.router = router;\n    }\n    submit() {\n      if (!this.username || !this.password) return;\n      // Verificação estática primeiro\n      if (this.username === this.staticUser && this.password === this.staticPass) {\n        this.tokenService.setSession('static-token', ['ADMIN'], 'Administrador');\n        this.router.navigate(['/home']);\n        return;\n      }\n      // Opcional: fallback para backend se quiser testar API (comentado por padrão)\n      // this.loading.set(true);\n      // this.auth.login({ email: this.username, password: this.password }).subscribe({\n      //   next: () => {\n      //     this.loading.set(false);\n      //     this.router.navigate(['/home']);\n      //   },\n      //   error: err => {\n      //     this.loading.set(false);\n      //     Swal.fire('Erro', err.error?.message || 'Falha no login', 'error');\n      //   }\n      // });\n      Swal.fire('Credenciais inválidas', 'Use usuário: root e senha: root', 'warning');\n    }\n    static ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.TokenService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 16,\n      vars: 3,\n      consts: [[1, \"d-flex\", \"justify-content-center\", \"align-items-center\", \"vh-100\", \"bg-light\"], [1, \"card\", \"shadow\", 2, \"min-width\", \"380px\"], [1, \"card-body\"], [1, \"mb-3\", \"text-center\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"btn\", \"btn-primary\", \"w-100\", 3, \"disabled\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h4\", 3);\n          i0.ɵɵtext(4, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.submit();\n          });\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n          i0.ɵɵtext(8, \"Usu\\u00E1rio\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.username, $event) || (ctx.username = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 6);\n          i0.ɵɵtext(12, \"Senha\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"input\", 8);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_13_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"button\", 9);\n          i0.ɵɵtext(15, \"Entrar\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.loading());\n        }\n      },\n      dependencies: [FormsModule, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n      encapsulation: 2\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}