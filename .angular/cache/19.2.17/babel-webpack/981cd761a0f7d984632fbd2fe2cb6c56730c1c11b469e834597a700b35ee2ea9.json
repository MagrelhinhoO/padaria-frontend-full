{"ast":null,"code":"import { inject, signal } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TokenService } from '../../../../core/services/auth/token.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nfunction LoginComponent_Conditional_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" Carregando... \");\n  }\n}\nfunction LoginComponent_Conditional_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" Entrar no Sistema \");\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    router = inject(Router);\n    tokenService = inject(TokenService);\n    email = '';\n    password = '';\n    loading = signal(false);\n    staticEmail = 'admin@exemplo.com';\n    staticPass = 'admin123';\n    submit() {\n      this.loading.set(true);\n      // Simulação de login estático\n      if (this.email === this.staticEmail && this.password === this.staticPass) {\n        // setSession(token: string, roles: string[], name: string)\n        this.tokenService.setSession('static-jwt-token-for-root', ['admin', 'user'], 'Administrador');\n        this.router.navigate(['/menu']);\n      } else {\n        // Exibe uma mensagem de erro se as credenciais estiverem incorretas\n        Swal.fire({\n          title: 'Erro de Login',\n          text: 'Email ou senha inválidos.',\n          icon: 'error',\n          timer: 3000,\n          showConfirmButton: false\n        });\n      }\n      this.loading.set(false);\n    }\n    static ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 24,\n      vars: 4,\n      consts: [[\"loginForm\", \"ngForm\"], [1, \"login-wrapper\"], [1, \"login-panel\"], [1, \"app-title\"], [1, \"panel-title\"], [\"novalidate\", \"\", \"aria-label\", \"Formul\\u00E1rio de login\", 3, \"ngSubmit\"], [1, \"field-group\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"name\", \"email\", \"required\", \"\", \"autocomplete\", \"email\", \"placeholder\", \"Digite seu email\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"autocomplete\", \"current-password\", \"placeholder\", \"Digite sua senha\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"primary-btn\", 3, \"disabled\"], [1, \"hint\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h1\", 3);\n          i0.ɵɵtext(3, \"Sistema Padaria\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"h2\", 4);\n          i0.ɵɵtext(5, \"Acesso ao Sistema\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"form\", 5, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.submit());\n          });\n          i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 7);\n          i0.ɵɵtext(10, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 8);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\", 9);\n          i0.ɵɵtext(14, \"Senha\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"input\", 10);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_15_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"button\", 11);\n          i0.ɵɵtemplate(17, LoginComponent_Conditional_17_Template, 1, 0)(18, LoginComponent_Conditional_18_Template, 1, 0);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"p\", 12);\n          i0.ɵɵtext(20, \"Use \");\n          i0.ɵɵelementStart(21, \"strong\");\n          i0.ɵɵtext(22, \"admin@exemplo.com / admin123\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(23, \" para acessar.\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const loginForm_r2 = i0.ɵɵreference(7);\n          i0.ɵɵadvance(11);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", !loginForm_r2.form.valid || ctx.loading());\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.loading() ? 17 : 18);\n        }\n      },\n      dependencies: [FormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n      styles: [\".login-wrapper[_ngcontent-%COMP%]{min-height:100vh;display:flex;align-items:center;justify-content:center;background:radial-gradient(circle at 30% 30%,#fff,#f5f6f8);padding:1.5rem;font-family:system-ui,Arial,sans-serif}.login-panel[_ngcontent-%COMP%]{width:100%;max-width:420px;background:#fff;padding:2.25rem 2rem 2rem;border-radius:10px;box-shadow:0 10px 25px -8px #00000026,0 4px 10px -3px #00000014;position:relative;overflow:hidden;display:flex;flex-direction:column;animation:_ngcontent-%COMP%_fadeIn .45s ease}.login-panel[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;inset:0;background:linear-gradient(135deg,rgba(13,110,253,.08),transparent 60%);pointer-events:none}.app-title[_ngcontent-%COMP%]{margin:0 0 .5rem;font-size:1.55rem;font-weight:600;letter-spacing:.5px;color:#0d6efd;text-align:center}.panel-title[_ngcontent-%COMP%]{margin:0 0 1.5rem;font-size:1rem;font-weight:500;text-transform:uppercase;letter-spacing:1px;text-align:center;color:#0d0d0d}form[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:1rem}.field-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:.4rem}.field-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:.8rem;font-weight:600;letter-spacing:.5px;text-transform:uppercase;color:#555}.field-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding:.7rem .85rem;border:1px solid #d0d4db;border-radius:6px;font-size:.95rem;background:#fbfcfd;transition:border-color .2s,box-shadow .2s,background .2s}.field-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{outline:none;border-color:#0d6efd;background:#fff;box-shadow:0 0 0 3px #0d6efd26}.primary-btn[_ngcontent-%COMP%]{appearance:none;border:none;background:#0d6efd;color:#fff;padding:.85rem 1rem;font-size:.95rem;font-weight:600;letter-spacing:.5px;border-radius:6px;cursor:pointer;transition:background .2s,transform .15s;display:inline-flex;align-items:center;justify-content:center}.primary-btn[_ngcontent-%COMP%]:hover:not(:disabled){background:#0264f4}.primary-btn[_ngcontent-%COMP%]:active:not(:disabled){transform:translateY(1px)}.primary-btn[_ngcontent-%COMP%]:disabled{opacity:.65;cursor:not-allowed}.hint[_ngcontent-%COMP%]{margin:.5rem 0 0;font-size:.7rem;text-align:center;color:#666;letter-spacing:.5px}@media (max-width: 480px){.login-panel[_ngcontent-%COMP%]{padding:1.75rem 1.25rem 1.25rem}.app-title[_ngcontent-%COMP%]{font-size:1.35rem}}@keyframes _ngcontent-%COMP%_fadeIn{0%{opacity:0;transform:translateY(10px)}to{opacity:1;transform:translateY(0)}}\"]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}