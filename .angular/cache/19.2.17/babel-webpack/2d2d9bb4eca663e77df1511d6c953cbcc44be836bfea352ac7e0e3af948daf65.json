{"ast":null,"code":"import { signal } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AuthService } from '../../../../core/services/auth/auth.service';\nimport { TokenService } from '../../../../core/services/auth/token.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../core/services/auth/auth.service\";\nimport * as i2 from \"../../../../core/services/auth/token.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    auth;\n    tokenService;\n    router;\n    // Modo estático: credenciais fixas root / root\n    staticUser = 'root@local';\n    staticPass = 'root';\n    email = '';\n    password = '';\n    loading = signal(false);\n    constructor(auth, tokenService, router) {\n      this.auth = auth;\n      this.tokenService = tokenService;\n      this.router = router;\n    }\n    submit() {\n      if (!this.email || !this.password) return;\n      // Verificação estática primeiro\n      if (this.username === this.staticUser && this.password === this.staticPass) {\n        this.tokenService.setSession('static-token', ['ADMIN'], 'Administrador');\n        this.router.navigate(['/menu']);\n        return;\n      }\n      // Opcional: fallback para backend se quiser testar API (comentado por padrão)\n      // this.loading.set(true);\n      // this.auth.login({ email: this.username, password: this.password }).subscribe({\n      //   next: () => {\n      //     this.loading.set(false);\n      //     this.router.navigate(['/home']);\n      //   },\n      //   error: err => {\n      //     this.loading.set(false);\n      //     Swal.fire('Erro', err.error?.message || 'Falha no login', 'error');\n      //   }\n      // });\n      Swal.fire('Credenciais inválidas', 'Use email: root@local e senha: root', 'warning');\n    }\n    static ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.TokenService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 22,\n      vars: 3,\n      consts: [[1, \"login-wrapper\"], [1, \"login-panel\"], [1, \"app-title\"], [1, \"panel-title\"], [\"novalidate\", \"\", \"aria-label\", \"Formul\\u00E1rio de login\", 3, \"ngSubmit\"], [1, \"field-group\"], [\"for\", \"username\"], [\"id\", \"username\", \"name\", \"username\", \"required\", \"\", \"autocomplete\", \"username\", \"placeholder\", \"root\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"autocomplete\", \"current-password\", \"placeholder\", \"root\", 3, \"ngModelChange\", \"ngModel\"], [1, \"primary-btn\", 3, \"disabled\"], [1, \"hint\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n          i0.ɵɵtext(3, \"Padaria\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"h2\", 3);\n          i0.ɵɵtext(5, \"Acesso\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.submit();\n          });\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n          i0.ɵɵtext(9, \"Usu\\u00E1rio\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.username, $event) || (ctx.username = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 8);\n          i0.ɵɵtext(13, \"Senha\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"button\", 10);\n          i0.ɵɵtext(16, \"Entrar\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"p\", 11);\n          i0.ɵɵtext(18, \"Use \");\n          i0.ɵɵelementStart(19, \"strong\");\n          i0.ɵɵtext(20, \"root / root\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(21, \" para acessar.\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(10);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.loading());\n        }\n      },\n      dependencies: [FormsModule, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n      styles: [\".login-wrapper[_ngcontent-%COMP%]{min-height:100vh;display:flex;align-items:center;justify-content:center;background:radial-gradient(circle at 30% 30%,#fff,#f5f6f8);padding:1.5rem;font-family:system-ui,Arial,sans-serif}.login-panel[_ngcontent-%COMP%]{width:100%;max-width:420px;background:#fff;padding:2.25rem 2rem 2rem;border-radius:10px;box-shadow:0 10px 25px -8px #00000026,0 4px 10px -3px #00000014;position:relative;overflow:hidden;display:flex;flex-direction:column;animation:_ngcontent-%COMP%_fadeIn .45s ease}.login-panel[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;inset:0;background:linear-gradient(135deg,rgba(13,110,253,.08),transparent 60%);pointer-events:none}.app-title[_ngcontent-%COMP%]{margin:0 0 .5rem;font-size:1.55rem;font-weight:600;letter-spacing:.5px;color:#0d6efd;text-align:center}.panel-title[_ngcontent-%COMP%]{margin:0 0 1.5rem;font-size:1rem;font-weight:500;text-transform:uppercase;letter-spacing:1px;text-align:center;color:#0d0d0d}form[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:1rem}.field-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:.4rem}.field-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:.8rem;font-weight:600;letter-spacing:.5px;text-transform:uppercase;color:#555}.field-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding:.7rem .85rem;border:1px solid #d0d4db;border-radius:6px;font-size:.95rem;background:#fbfcfd;transition:border-color .2s,box-shadow .2s,background .2s}.field-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{outline:none;border-color:#0d6efd;background:#fff;box-shadow:0 0 0 3px #0d6efd26}.primary-btn[_ngcontent-%COMP%]{appearance:none;border:none;background:#0d6efd;color:#fff;padding:.85rem 1rem;font-size:.95rem;font-weight:600;letter-spacing:.5px;border-radius:6px;cursor:pointer;transition:background .2s,transform .15s;display:inline-flex;align-items:center;justify-content:center}.primary-btn[_ngcontent-%COMP%]:hover:not(:disabled){background:#0264f4}.primary-btn[_ngcontent-%COMP%]:active:not(:disabled){transform:translateY(1px)}.primary-btn[_ngcontent-%COMP%]:disabled{opacity:.65;cursor:not-allowed}.hint[_ngcontent-%COMP%]{margin:.5rem 0 0;font-size:.7rem;text-align:center;color:#666;letter-spacing:.5px}@media (max-width: 480px){.login-panel[_ngcontent-%COMP%]{padding:1.75rem 1.25rem 1.25rem}.app-title[_ngcontent-%COMP%]{font-size:1.35rem}}@keyframes _ngcontent-%COMP%_fadeIn{0%{opacity:0;transform:translateY(10px)}to{opacity:1;transform:translateY(0)}}\"]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}